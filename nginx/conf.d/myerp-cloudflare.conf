# MyERP Nginx Configuration for Cloudflare
# Use this configuration when deploying with Cloudflare

# Upstream backends
upstream backend_api {
    server backend:4000;
}

upstream frontend_app {
    server frontend:80;
}

# Cloudflare Real IP Restoration
# This ensures your application sees the actual visitor IP, not Cloudflare's IP
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 104.16.0.0/13;
set_real_ip_from 104.24.0.0/14;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2a06:98c0::/29;
set_real_ip_from 2c0f:f248::/32;

# Use the CF-Connecting-IP header sent by Cloudflare
real_ip_header CF-Connecting-IP;

# Health check endpoint
server {
    listen 80;
    server_name health;

    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# HTTP Server - Cloudflare will handle HTTPS, so we listen on 80
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;

    # Don't redirect to HTTPS - Cloudflare handles that
    # Traffic from Cloudflare to your server will be HTTP or Cloudflare Origin SSL

    # API proxy
    location /api/ {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        # Cloudflare headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-RAY $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;

        # Standard proxy headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Frontend app
    location / {
        proxy_pass http://frontend_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        # Cloudflare headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-RAY $http_cf_ray;

        # Standard proxy headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS Server with Cloudflare Origin Certificate (Optional - for Full Strict mode)
# Uncomment this section if you want encrypted connection between Cloudflare and your server
#
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#
#     # Cloudflare Origin Certificate (15-year validity, free)
#     # Generate at: Cloudflare Dashboard → SSL/TLS → Origin Server → Create Certificate
#     ssl_certificate /etc/nginx/ssl/cloudflare-origin-cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/cloudflare-origin-key.pem;
#
#     # Cloudflare Authenticated Origin Pulls (optional, extra security)
#     # ssl_client_certificate /etc/nginx/ssl/cloudflare-origin-pull-ca.pem;
#     # ssl_verify_client on;
#
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # API proxy
#     location /api/ {
#         proxy_pass http://backend_api;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#
#         # Cloudflare headers
#         proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
#         proxy_set_header CF-RAY $http_cf_ray;
#         proxy_set_header CF-Visitor $http_cf_visitor;
#
#         # Standard proxy headers
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#
#         proxy_cache_bypass $http_upgrade;
#         proxy_read_timeout 300s;
#         proxy_connect_timeout 75s;
#     }
#
#     # Frontend app
#     location / {
#         proxy_pass http://frontend_app;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#
#         # Cloudflare headers
#         proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
#         proxy_set_header CF-RAY $http_cf_ray;
#
#         # Standard proxy headers
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#
#         proxy_cache_bypass $http_upgrade;
#     }
# }
